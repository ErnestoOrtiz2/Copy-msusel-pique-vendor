File,Line,Column,DefaultLevel,Level,Category,Name,Warning,Suggestion,Note,CWEs,Context,Fingerprint,ToolVersion,RuleId,HelpUri
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,39,9,4,4,shell,system,This causes a new program to execute and is difficult to use safely (CWE-78).,try using a library call that implements the same functionality if available.,,CWE-78,int a = system(string);,64fc3f4c7944ea1d237e62bf6963063b06d1cd8a5f7ae85d1baa7890bc9552ad,2.0.17,FF1044,https://cwe.mitre.org/data/definitions/78.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,413,2,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,	char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,680,6,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,					char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,706,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char types_buf[BPF_REG_SIZE + 1];,a2e78453a03384bcb8189d024da16f6249e00496a7ebc6366fe9a941ed9d5517,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,753,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst->FIELD, src->FIELD,					\",87c7dbcbae93c13f88f60d5401dc204050662cbebdefb35c65622e3be5f9a8c2,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,787,4,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"			memcpy(new_##FIELD, state->FIELD,		\",a24f317fcf9a7f36e815fb7af5ba44841df241ca285c606cbce40f8850d3461e,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,849,5,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"				memcpy(&state->refs[i], &state->refs[last_idx],",5948dcd3bbc02f00223286bfb2ca0e2e0f2038174426c07ae1722f9415d8e965,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,913,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst, src, offsetof(struct bpf_func_state, acquired_refs));",3c3fafc3b8c32d3a541a0f8433cd4b28abbe0e819704ceabe43c9f57751beae0,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,933,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(dst_state->jmp_history, src->jmp_history, jmp_sz);",6c279235b8cc3f393a416955b25b478ddda34ba34c3f72382d146e25b7a7f56e,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3029,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3041,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3489,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3514,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3723,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3745,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,3884,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,4046,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,4418,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,4482,4,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,			char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,6668,3,2,2,buffer,char,"Statically-sized arrays can be improperly restricted, leading to potential overflows or other issues (CWE-119!/CWE-120).","Perform bounds checking, use functions that limit length, or ensure that the size is larger than the maximum possible length.",,CWE-119!/CWE-120,		char tn_buf[48];,98925ae23cebbc676182148a8b2a9715b5e54ecc071219db96b2650ad8924f1e,2.0.17,FF1013,https://cwe.mitre.org/data/definitions/119.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,11437,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(new_data, old_data, sizeof(struct bpf_insn_aux_data) * off);",f02e80b7b1ebd3a2a001bfe137ed595d013b593a7beee94aa0bca5b5f6de5a51,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,11438,2,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"	memcpy(new_data + off + cnt - 1, old_data + off,",f0b0259382c4cb52a7dddc03e5485cf3e797544b2683a830b639f53a527aff2a,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,11665,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(insn + i, &trap, sizeof(trap));",f65e0afa859430d42b95c6367d8a9a2b52bf0dd3c73aaae2302949dd87167177,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,11705,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(insn, &ja, sizeof(ja));",84bc17f60d832a7b33f0b664969e92960438fa4e54fb2a3bb38530895dd0a4c9,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,12101,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(func[i]->insnsi, &prog->insnsi[subprog_start],",1fe926c5d1ec72fe2510b279b13b8ed90c8b3282e342326d7f34363e2464b32e,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,13542,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(env->prog->aux->used_maps, env->used_maps,",df12b226d4addcf0df07b626ceba80920ce635acd1f3394e911f2d8ed593c818,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,13556,3,2,2,buffer,memcpy,Does not check for buffer overflows when copying to destination (CWE-120).,Make sure destination can always hold the source data.,,CWE-120,"		memcpy(env->prog->aux->used_btfs, env->used_btfs,",98506979d501cd5b81fca7bcfecdc011ed7421f2b915576c4f65c9e33bf9181a,2.0.17,FF1004,https://cwe.mitre.org/data/definitions/120.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,9942,7,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,	bool equal;,77272f25e10d3c8663094f47fe1ebb7baafea07cdf365d5a17c26ef6c519f485,2.0.17,FF1071,https://cwe.mitre.org/data/definitions/126.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,9954,10,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,		return equal && rold->frameno == rcur->frameno;,50f9ce2f9d58847f24dea01a83436f5634c079bc93ebdb34183f0071f2d6fad4,2.0.17,FF1071,https://cwe.mitre.org/data/definitions/126.html
C:\Users\ernes\IdeaProjects\myVendor2\src\main\resources\benchmark\verifier78.c,9956,6,1,1,buffer,equal,Function does not check the second iterator for over-read conditions (CWE-126).,This function is often discouraged by most C++ coding standards in favor of its safer alternatives provided since C++14. Consider using a form of this function that checks the second iterator before potentially overflowing it.,,CWE-126,	if (equal),70cd019f5ba38988fe874d148f379cc75a42356bb8f3164da08a231179f72151,2.0.17,FF1071,https://cwe.mitre.org/data/definitions/126.html
